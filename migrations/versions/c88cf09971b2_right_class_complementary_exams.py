"""right class Complementary Exams

Revision ID: c88cf09971b2
Revises: 5d9cef1b1f45
Create Date: 2024-09-03 16:14:10.694368

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c88cf09971b2'
down_revision: Union[str, None] = '5d9cef1b1f45'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Create a new table with the updated schema
    op.create_table(
        'complementary_exams_new',
        sa.Column('comp_exam_id', sa.Integer(), primary_key=True),
        sa.Column('patient_id', sa.Integer(), nullable=False),
        sa.Column('exam_details', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'])
    )
    
    # Step 2: Copy data from the old table to the new table
    op.execute(
        'INSERT INTO complementary_exams_new (comp_exam_id, patient_id, exam_details) '
        'SELECT exam_id, patient_id, exam_details FROM complementary_exams'
    )
    
    # Step 3: Drop the old table
    op.drop_table('complementary_exams')
    
    # Step 4: Rename the new table to the original table name
    op.rename_table('complementary_exams_new', 'complementary_exams')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Create the old table structure again
    op.create_table(
        'complementary_exams_old',
        sa.Column('exam_id', sa.Integer(), primary_key=True),
        sa.Column('patient_id', sa.Integer(), nullable=False),
        sa.Column('exam_details', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'])
    )
    
    # Step 2: Copy data from the new table to the old table
    op.execute(
        'INSERT INTO complementary_exams_old (exam_id, patient_id, exam_details) '
        'SELECT comp_exam_id, patient_id, exam_details FROM complementary_exams'
    )
    
    # Step 3: Drop the new table
    op.drop_table('complementary_exams')
    
    # Step 4: Rename the old table to the original table name
    op.rename_table('complementary_exams_old', 'complementary_exams')
    # ### end Alembic commands ###
