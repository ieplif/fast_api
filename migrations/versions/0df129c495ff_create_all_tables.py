"""create all tables

Revision ID: 0df129c495ff
Revises: 
Create Date: 2024-08-28 16:13:20.009545

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0df129c495ff'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patients',
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('place_of_birth', sa.String(), nullable=False),
    sa.Column('marital_status', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('profession', sa.String(), nullable=False),
    sa.Column('residential_address', sa.String(), nullable=False),
    sa.Column('commercial_address', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('patient_id')
    )
    op.create_table('professionals',
    sa.Column('professional_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('position', sa.Enum('physiotherapist', 'intern', name='position'), nullable=False),
    sa.Column('registration_number', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('professional_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('clinical_examinations',
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('exam_details', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('exam_id')
    )
    op.create_table('clinical_histories',
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('main_complaint', sa.String(), nullable=False),
    sa.Column('disease_history', sa.String(), nullable=False),
    sa.Column('lifestyle_habits', sa.String(), nullable=False),
    sa.Column('previous_treatments', sa.String(), nullable=False),
    sa.Column('personal_family_history', sa.String(), nullable=False),
    sa.Column('other_information', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_table('complementary_exams',
    sa.Column('exam_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('exam_details', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('exam_id')
    )
    op.create_table('evolution_records',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('professional_id', sa.Integer(), nullable=False),
    sa.Column('procedures', sa.String(), nullable=False),
    sa.Column('complications', sa.String(), nullable=False),
    sa.Column('heath_status_evolution', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.ForeignKeyConstraint(['professional_id'], ['professionals.professional_id'], ),
    sa.PrimaryKeyConstraint('record_id')
    )
    op.create_table('physiotherapy_diagnosis',
    sa.Column('diagnosis_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('diagnosis_details', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('diagnosis_id')
    )
    op.create_table('prognosis',
    sa.Column('prognosis_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('prognosis_details', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('prognosis_id')
    )
    op.create_table('treatments_plan',
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('objectives', sa.String(), nullable=False),
    sa.Column('probable_sessions', sa.Integer(), nullable=False),
    sa.Column('procedures', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('plan_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('treatments_plan')
    op.drop_table('prognosis')
    op.drop_table('physiotherapy_diagnosis')
    op.drop_table('evolution_records')
    op.drop_table('complementary_exams')
    op.drop_table('clinical_histories')
    op.drop_table('clinical_examinations')
    op.drop_table('users')
    op.drop_table('professionals')
    op.drop_table('patients')
    # ### end Alembic commands ###
